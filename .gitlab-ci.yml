image: rust

stages:
  - test
  - deploy

test:
  tags:
    - "lightweight"
  stage: test
  before_script:
    - rustup component add rustfmt
    - rustup component add clippy
  script:
    - cargo fmt -- --color=always --check
    - cargo test --all-features -- --color=always
    - cargo clippy

coverage:
  image: rustlang/rust:nightly
  stage: test
  variables:
    RUSTFLAGS: "-Zinstrument-coverage"
    LLVM_PROFILE_FILE: "hawkbitrs-%p-%m.profraw"
  before_script:
    - cargo install grcov
    - rustup component add llvm-tools-preview
  script:
    - cargo test --all-features
    # generate html report
    - grcov . --binary-path ./target/debug/ -s . -t html --branch --ignore-not-existing --ignore "hawkbit/examples/*" --ignore "*target*"  -o ./coverage/
    # generate cobertura report for gitlab integration
    - grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "hawkbit/examples/*" --ignore "*target*"  -o lcov
    - curl -O https://raw.githubusercontent.com/eriwen/lcov-to-cobertura-xml/master/lcov_cobertura/lcov_cobertura.py && chmod +x lcov_cobertura.py
    - ./lcov_cobertura.py lcov
  artifacts:
    paths:
      - 'coverage'
    reports:
      cobertura: coverage.xml

pages:
  tags:
    - "lightweight"
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $PIPELINE_BRANCH != $CI_DEFAULT_BRANCH
      when: never
  script:
    - cargo doc --all-features
    - mv target/doc public
  artifacts:
    paths:
      - 'public'